spring.application.name=computeservice
server.port=8886
#spring.datasource.driver-class-name: oracle.jdbc.driver.OracleDriver
#spring.datasource.url: jdbc:oracle:thin:@192.168.2.254:1521:ORCL
spring.datasource.username: root
spring.datasource.password: d-123456
spring.datasource.url=jdbc\:mysql\://cdb-g03u6t9q.bj.tencentcdb.com\:10038/mysql?characterEncoding\=utf8&useSSL\=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
mybatis.mapper-locations=classpath:mappings/*.xml
mybatis.type-aliases-package=com.*.entity
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource  
spring.datasource.initialSize=5 
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
spring.datasource.maxWait=60000
spring.session.store-type=jdbc



# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
#hystrix.command.default.execution.timeout.enabled=false
#hystrix.threadpool.default.coreSize= 500
#缺省为1000
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000 
hystrix.command.default.circuitBreaker.requestVolumeThreshold=1500
hystrix.threadpool.default.coreSize=1500
#hystrix.threadpool.default.maxQueueSize=1000
#hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=300000
ribbon.ConnectTimeout=300000
ribbon.ReadTimeout=300000
#hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=500
# feign配置
 # 在feign中开启hystrix功能，默认情况下feign不开启hystrix功能
feign.hystrix.enabled= true
  ## 配置httpclient线程池
httpclient.enabled= true
okhttp.enabled= false

# 心跳检测检测与续约时间
# 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
#以上配置说明
#lease-renewal-interval-in-seconds 每间隔1s，向服务端发送一次心跳，证明自己依然”存活“
#lease-expiration-duration-in-seconds  告诉服务端，如果我2s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
eureka.instance.lease-renewal-interval-in-seconds= 1
eureka.instance.lease-expiration-duration-in-seconds= 2



